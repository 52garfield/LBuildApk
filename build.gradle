// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.20"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}



subprojects { p ->
    println "解析的 build.gradle：${p.name} "
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'

    android{
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    dependencies {
        implementation 'androidx.core:core-ktx:1.3.2'
        implementation 'androidx.appcompat:appcompat:1.2.0'
        implementation 'com.google.android.material:material:1.3.0'
        implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
        testImplementation 'junit:junit:4.+'
        androidTestImplementation 'androidx.test.ext:junit:1.1.2'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/*afterEvaluate { project ->
    //收集所有project的task集合
    Map<Project, Set<Task>> allTasks = project.getAllTasks(true)
    //遍万毎一-个project下的task集合
    allTasks.entrySet().each { projTasks ->
        System.out.println(projTasks.key.name);

        projTasks.value.each { task ->
            //輸出task的名称和depend0n依頼
            System.out.println(task.getName());
            for (Object o : task.getDependsOn()) {
                System.out.println("depend0n--> " + o.toString());
            }
            //打印每个任务的输入
            for (File file : task.getInputs().getFiles().getFiles()) {
                System.out.println("input--> " + file.getAbsolutePath());
            }
            for (File file : task.getOutputs().getFiles().getFiles()) {
                System.out.println("output--> " + file.getAbsolutePath());
            }
            System.out.println("--------------------------");
        }
    }
}*/


